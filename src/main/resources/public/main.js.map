{"version":3,"sources":["./src/app/sign-up/auth.module.ts","./src/app/user/user.component.ts","./src/app/user/user.component.html","./src/environments/environment.ts","./src/app/create-post/create-post.component.ts","./src/app/create-post/create-post.component.html","./src/app/create-post/createPost.service.ts","./src/app/sign-up-succeed/sign-up-succeed.component.ts","./src/app/sign-up-succeed/sign-up-succeed.component.html","./src/app/edit-user/edit-user.component.ts","./src/app/edit-user/edit-user.component.html","./src/app/welcome/welcome.component.ts","./src/app/welcome/welcome.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/log-in/log-in.component.ts","./src/app/log-in/log-in.component.html","./src/app/sign-up/sign-up.component.ts","./src/app/sign-up/sign-up.component.html","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/not-found/not-found.component.ts","./src/app/not-found/not-found.component.html","./src/app/auth/auth.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AAEM;;AAW9C,MAAM,UAAU;;yFAAV,UAAU;8IAAV,UAAU,kBALZ;YACP,4DAAY;YACZ,kEAAmB;SACpB;mIAEU,UAAU,cAJnB,4DAAY;QACZ,kEAAmB;6FAGV,UAAU;cATtB,sDAAQ;eAAC;gBACR,YAAY,EAAE,EAEb;gBACD,OAAO,EAAE;oBACP,4DAAY;oBACZ,kEAAmB;iBACpB;aACF;;;;;;;;;;;;;;ACbD;AAAA;AAAA;AAAkD;;AAO3C,MAAM,aAAa;IAExB,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;0EALU,aAAa;6FAAb,aAAa;QCP1B,oEAAG;QAAA,sEAAW;QAAA,4DAAI;;6FDOL,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AEND;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACI;;;;;;;;;ICShD,uEAA8F;IAAA,qFAA0B;IAAA,4DAAO;;ADK9H,MAAM,mBAAmB;IAI9B,YAAqB,IAAgB,EAAU,MAAqB,EAAU,iBAAoC,EAAU,MAAc;QAArH,SAAI,GAAJ,IAAI,CAAY;QAAU,WAAM,GAAN,MAAM,CAAe;QAAU,sBAAiB,GAAjB,iBAAiB,CAAmB;QAAU,WAAM,GAAN,MAAM,CAAQ;QACxI,IAAI,CAAC,qBAAqB,GAAG;YAC3B,WAAW,EAAE,EAAE;YACf,EAAE,EAAE,CAAC;YACL,GAAG,EAAE,EAAE;YACP,QAAQ,EAAE,EAAE;YACZ,QAAQ,EAAE,EAAE;SACb;IAEH,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,WAAW,GAAG,IAAI,wDAAS,CAAC;YAC/B,WAAW,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAChC,GAAG,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACxB,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAC7B,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;SAC9B,CAAC;IACJ,CAAC;IAED,OAAO;QACL,IAAI,CAAC,qBAAqB,GAAG;YAC3B,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,KAAK;YACrD,EAAE,EAAE,CAAC;YACN,GAAG,EAAE,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,KAAK;YACtC,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK;YAChD,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK;SACjD,CAAC;QAEF,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;QAC5E,CAAC,EAAE,GAAG,EAAE;YACN,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,yCAAyC,CAAC;QAC9D,CAAC,CAAC,CAAC;IAEH,CAAC;;sFAtCQ,mBAAmB;mGAAnB,mBAAmB;QCZhC,yEAGE;QAAA,0EACE;QAD8B,+IAAY,aAAS,IAAC;QACpD,sEACE;QAAA,2EAAyB;QAAA,uEAAY;QAAA,4DAAQ;QAAC,+DAAO;QACrD,sEACA;QAAA,iHAA8F;QAChG,4DAAM;QAIN,sEACE;QAAA,2EAA+B;QAAA,iEAAK;QAAA,4DAAQ;QAAA,gEAAO;QACnD,0EAA6F;QAC/F,4DAAM;QAEN,uEACE;QAAA,4EAAsB;QAAA,qEAAS;QAAA,4DAAQ;QACvC,uEACF;QAAA,4DAAM;QAEN,uEACE;QAAA,4EAAiB;QAAA,gEAAI;QAAA,4DAAQ;QAC7B,wEACF;QAAA,4DAAM;QAEN,8EAAsB;QAAA,kEAAM;QAAA,4DAAS;QAEvC,4DAAO;QACT,4DAAM;;QA3BE,0DAAyB;QAAzB,sFAAyB;QAGR,0DAAiC;QAAjC,0FAAiC;QAC9C,0DAAuF;QAAvF,yJAAuF;QAOpD,0DAA8B;QAA9B,uFAA8B;QAKpD,0DAA8B;QAA9B,uFAA8B;QAK9B,0DAAyB;QAAzB,kFAAyB;;6FDZrC,mBAAmB;cAL/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,8BAA8B;gBAC3C,SAAS,EAAE,CAAC,6BAA6B,CAAC;aAC3C;;;;;;;;;;;;;;AEdD;AAAA;AAAA;AAAA;AAA2C;;;AAI3C,MAAM,WAAW,GAAE,wBAAwB,CAAC;AAKrC,MAAM,iBAAiB;IAE5B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAEzC,OAAO,CAAC,qBAA4C;QAClD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,GAAC,WAAW,EAAE,qBAAqB,CAAC,CAAC;IACxE,CAAC;;kFANU,iBAAiB;oGAAjB,iBAAiB,WAAjB,iBAAiB,mBAFhB,MAAM;6FAEP,iBAAiB;cAH7B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAkD;;AAO3C,MAAM,sBAAsB;IAEjC,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;4FALU,sBAAsB;sGAAtB,sBAAsB;QCPnC,oEAAG;QAAA,iFAAsB;QAAA,4DAAI;;6FDOhB,sBAAsB;cALlC,uDAAS;eAAC;gBACT,QAAQ,EAAE,qBAAqB;gBAC/B,WAAW,EAAE,kCAAkC;gBAC/C,SAAS,EAAE,CAAC,iCAAiC,CAAC;aAC/C;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAkD;;AAO3C,MAAM,iBAAiB;IAE5B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;kFALU,iBAAiB;iGAAjB,iBAAiB;QCP9B,oEAAG;QAAA,2EAAgB;QAAA,4DAAI;;6FDOV,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAkD;;AAO3C,MAAM,gBAAgB;IAE3B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;gFALU,gBAAgB;gGAAhB,gBAAgB;QCN7B,yEACA;QAAA,oEAAG;QAAA,2HAAgE;QAAA,4DAAI;QACvE,oEAAG;QAAA,wFAA6B;QAAA,4DAAI;QACpC,4DAAM;;6FDGO,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,0BAA0B;gBACvC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACvC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAA0C;;;;AAOnC,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,aAAa,CAAC;KACvB;;wEAFY,YAAY;4FAAZ,YAAY;QCPzB,yEAEA;QAAA,wEAEa;QACb,4DAAS;QAET,uEACA;QAAA,2EAA+B;QAE/B,4DAAO;;6FDHM,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwD;AACjB;AACe;AACT;AACY;AACG;AACR;AACc;AACA;AACL;AACsB;AAChC;AACG;AACL;AACK;AACkB;AACrB;AAC0B;AACrC;AACkB;;;;AA8BnD,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YAXJ;YACP,uEAAa;YACb,oEAAgB;YAChB,mEAAmB;YACnB,sEAAgB;YAChB,gEAAU;YACV,sEAAY;YACZ,mEAAmB,CAAC,OAAO,EAAE;YAC7B,6FAAuB;YACvB,wDAAY,CAAC,OAAO,EAAE;SACvB;mIAIU,SAAS,mBAzBlB,2DAAY;QACZ,yEAAe;QACf,uEAAc;QACd,0EAAe;QACf,gFAAiB;QACjB,kEAAa;QACb,gFAAiB;QACjB,2EAAgB;QAChB,kGAAsB;QACtB,uFAAmB,aAGnB,uEAAa;QACb,oEAAgB;QAChB,mEAAmB;QACnB,sEAAgB;QAChB,gEAAU;QACV,sEAAY,uEAEZ,6FAAuB;6FAMd,SAAS;cA3BrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,yEAAe;oBACf,uEAAc;oBACd,0EAAe;oBACf,gFAAiB;oBACjB,kEAAa;oBACb,gFAAiB;oBACjB,2EAAgB;oBAChB,kGAAsB;oBACtB,uFAAmB;iBACpB;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,oEAAgB;oBAChB,mEAAmB;oBACnB,sEAAgB;oBAChB,gEAAU;oBACV,sEAAY;oBACZ,mEAAmB,CAAC,OAAO,EAAE;oBAC7B,6FAAuB;oBACvB,wDAAY,CAAC,OAAO,EAAE;iBACvB;gBACD,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;AChDD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgD;AAEkB;;;;;;;;ICK5D,uEAA8C;IAAA,4FAAgC;IAAA,4DAAO;;;IAMrF,uEAA8C;IAAA,0FAA8B;IAAA,4DAAO;;;IAIrF,yEAAgD;IAAA,qHAAyD;IAAA,4DAAM;;;IAC/G,yEACE;IAAA,oEAAG;IAAA,uDAA0B;IAAA,4DAAI;IACnC,4DAAM;;;IADD,0DAA0B;IAA1B,8FAA0B;;ADN5B,MAAM,cAAc;IAMzB,YAAoB,WAAwB,EAAU,cAA8B,EAAU,MAAc,EAAU,MAAqB;QAAvH,gBAAW,GAAX,WAAW,CAAa;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,WAAM,GAAN,MAAM,CAAe;QACzI,IAAI,CAAC,mBAAmB,GAAG;YACzB,QAAQ,EAAE,EAAE;YACZ,QAAQ,EAAE,EAAE;SACb,CAAC;IACJ,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,wDAAS,CAAC;YAC7B,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClD,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACnD,CAAC,CAAC;QAEH,IAAI,CAAC,cAAc,CAAC,WAAW;aAC5B,SAAS,CAAC,MAAM,CAAC,EAAE;YAClB,IAAI,MAAM,CAAC,UAAU,KAAK,SAAS,IAAI,MAAM,CAAC,UAAU,KAAK,MAAM,EAAE;gBACnE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,oBAAoB,CAAC,CAAC;gBAC1C,IAAI,CAAC,sBAAsB,GAAG,8CAA8C;oBAC1E,yCAAyC,CAAC;aAC7C;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,KAAK;QACH,IAAI,CAAC,mBAAmB,GAAG;YACzB,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK;YAC9C,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK;SAC/C,CAAC;QAEF,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAChE,IAAI,IAAI,EAAE;gBACR,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC;gBAC9B,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,kBAAkB,CAAC;aACxC;iBAAM;gBACL,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;aACrB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,kBAAkB,CAAC,QAAQ;QACzB,OAAO,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,KAAK,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;IACvF,CAAC;IAED,kBAAkB,CAAC,QAAQ;QACzB,OAAO,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,KAAK,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;IACvF,CAAC;;4EApDU,cAAc;8FAAd,cAAc;QCb3B,yEACE;QAAA,qEAAI;QAAA,gEAAK;QAAA,4DAAK;QAEd,0EACE;QAD4B,0IAAY,WAAO,IAAC;QAChD,sEACE;QAAA,2EAAsB;QAAA,oEAAS;QAAA,4DAAQ;QACvC,sEACA;QAAA,4GAA8C;QAChD,4DAAM;QAEN,sEACE;QAAA,4EAAsB;QAAA,qEAAS;QAAA,4DAAQ;QACvC,uEACA;QAAA,8GAA8C;QAChD,4DAAM;QAEN,6EAAqC;QAAA,kEAAK;QAAA,4DAAS;QACnD,4GAAgD;QAChD,4GACE;QAGJ,4DAAO;QACT,4DAAM;;QApBE,0DAAuB;QAAvB,oFAAuB;QAGwB,0DAA8B;QAA9B,uFAA8B;QACzE,0DAAsC;QAAtC,oGAAsC;QAKS,0DAA8B;QAA9B,uFAA8B;QAC7E,0DAAsC;QAAtC,oGAAsC;QAIpB,0DAAoB;QAApB,6EAAoB;QACpB,0DAA8C;QAA9C,uGAA8C;;6FDL/D,cAAc;cAN1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;;;;;;;;;;;;AEXD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgD;AACkB;;;;;;;;ICM5D,uEAAwC;IAAA,uFAA2B;IAAA,4DAAO;;;IAK1E,uEAA8C;IAAA,4FAAgC;IAAA,4DAAO;;;IAOrF,uEAA8C;IAAA,0FAA8B;IAAA,4DAAO;;;IAMnF,uEAAgD;IAAA,mGAAuC;IAAA,4DAAO;;ADb7F,MAAM,eAAe;IAI1B,YAAoB,WAAwB,EAAU,MAAc,EAAU,MAAqB;QAA/E,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,WAAM,GAAN,MAAM,CAAe;IACnG,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,UAAU,GAAG,IAAI,wDAAS,CAAC;YAC9B,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,CAAC,CAAC;YACnE,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClD,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClD,SAAS,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACpD,CAAC,CAAC;IACL,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,oBAAoB,GAAG;YAC1B,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK;YAC/C,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,KAAK;YACzC,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK;YAC/C,iBAAiB,EAAE,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,KAAK;SAC1D,CAAC;QAEF,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,oBAAoB,CAAC;YAClD,SAAS,CAAC,GAAG,EAAE;YACb,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,EAAE,EAAC,WAAW,EAAE,EAAC,UAAU,EAAE,MAAM,EAAC,EAAC,CAAC,CAAC;QACxE,CAAC,EAAE,GAAG,EAAE;YACN,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,wCAAwC,CAAC;QAC7D,CAAC,CAAC,CAAC;IACL,CAAC;IAED,eAAe,CAAC,KAAK;QACnB,OAAO,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,KAAK,IAAI,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC;IACnF,CAAC;IAED,kBAAkB,CAAC,QAAQ;QACzB,OAAO,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,KAAK,IAAI,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;IACzF,CAAC;IAED,kBAAkB,CAAC,QAAQ;QACzB,OAAO,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,KAAK,IAAI,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;IACzF,CAAC;IAED,mBAAmB,CAAC,SAAS;QAC3B,OAAO,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,KAAK,IAAI,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,CAAC;IAC3F,CAAC;;8EA9CU,eAAe;+FAAf,eAAe;QCZ5B,yEACE;QAAA,qEAAI;QAAA,mEAAQ;QAAA,4DAAK;QAEjB,0EACE;QAD6B,2IAAY,YAAQ,IAAC;QAClD,sEACE;QAAA,2EAAmB;QAAA,iEAAM;QAAA,4DAAQ;QACjC,sEACA;QAAA,6GAAwC;QAC1C,4DAAM;QACN,sEACE;QAAA,4EAAsB;QAAA,kEAAM;QAAA,4DAAQ;QACpC,uEACA;QAAA,+GAA8C;QAChD,4DAAM;QAGN,uEACE;QAAA,4EAAsB;QAAA,qEAAS;QAAA,4DAAQ;QACvC,uEACA;QAAA,+GAA8C;QAChD,4DAAM;QAEN,uEACE;QAAA,4EAAuB;QAAA,4EAAgB;QAAA,4DAAQ;QAC/C,wEACA;QAAA,+GAAgD;QAElD,4DAAM;QAGN,8EAAsC;QAAA,mEAAO;QAAA,4DAAS;QACxD,4DAAO;QACT,4DAAM;;QA7BE,0DAAwB;QAAxB,qFAAwB;QAGN,0DAA2B;QAA3B,oFAA2B;QACzC,0DAAgC;QAAhC,8FAAgC;QAInB,0DAA8B;QAA9B,uFAA8B;QAC3C,0DAAsC;QAAtC,oGAAsC;QAMrB,0DAA8B;QAA9B,uFAA8B;QAC/C,0DAAsC;QAAtC,oGAAsC;QAKrB,0DAA+B;QAA/B,wFAA+B;QAChD,0DAAwC;QAAxC,sGAAwC;;6FDbvC,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,0BAA0B;gBACvC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACvC;;;;;;;;;;;;;;AEXD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;ICChD,sEACE;IAAA,uEACE;IAAA,oEAGA;IAAA,yEACE;IAAA,wEACF;IAAA,4DAAM;IACR,4DAAI;IAEN,sEACE;IAAA,uEAAwD;IAAA,kEAAO;IAAA,4DAAI;IACrE,4DAAM;IACN,sEACE;IAAA,uEAAsD;IAAA,iEAAK;IAAA,4DAAI;IACjE,4DAAM;IACN,4DAAM;;;IAEN,sEACE;IAAA,uEACE;IAAA,oEAGA;IAAA,yEACE;IAAA,wEACF;IAAA,4DAAM;IACR,4DAAI;IAEN,sEACE;IAAA,uEAAsD;IAAA,uEAAY;IAAA,4DAAI;IACxE,4DAAM;IACN,sEACE;IAAA,uEAAsD;IAAA,mEAAO;IAAA,4DAAI;IACnE,4DAAM;IACN,4DAAM;;AD1BD,MAAM,eAAe;IAE1B,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAAI,CAAC;IAEjD,QAAQ;IAER,CAAC;;8EANU,eAAe;+FAAf,eAAe;QCT5B,yEACE;QAAA,4GACE;QAiBF,4GACE;QAiBJ,4DAAS;;QApCF,0DAAgC;QAAhC,8FAAgC;QAkBhC,0DAAiC;QAAjC,+FAAiC;;6FDV3B,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAkD;;AAO3C,MAAM,iBAAiB;IAE5B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;kFALU,iBAAiB;iGAAjB,iBAAiB;QCP7B,oEACD;;6FDMa,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+D;AAEnB;AAIJ;;;;AAGxC,MAAM,WAAW,GAAG,4BAA4B,CAAC;AAM1C,MAAM,WAAW;IAUtB,YAAoB,IAAgB,EAAU,YAAiC;QAA3D,SAAI,GAAJ,IAAI,CAAY;QAAU,iBAAY,GAAZ,YAAY,CAAqB;QARrE,aAAQ,GAA0B,IAAI,0DAAY,EAAE,CAAC;QACrD,aAAQ,GAAyB,IAAI,0DAAY,EAAE,CAAC;QAE9D,wBAAmB,GAAG;YACpB,YAAY,EAAE,IAAI,CAAC,eAAe,EAAE;YACpC,QAAQ,EAAE,IAAI,CAAC,WAAW,EAAE;SAC7B;IAGD,CAAC;IAED,MAAM,CAAC,oBAA0C;QAC/C,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,GAAG,SAAS,EAAE,oBAAoB,CAAC,CAAC;IACvE,CAAC;IAGD,KAAK,CAAC,mBAAwC;QAC5C,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAgB,WAAW,GAAG,QAAQ,EAAE,mBAAmB,CAAC,CAAC,IAAI,CAAC,0DAAG,CAAC,IAAI,CAAC,EAAE;YAChG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,qBAAqB,EAAE,IAAI,CAAC,mBAAmB,CAAC;YACxE,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC;YAClD,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,cAAc,EAAE,IAAI,CAAC,YAAY,CAAC;YAC1D,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;YAErD,OAAO,IAAI,CAAC;QACd,CAAC,CAAC,CAAC,CAAC;IACN,CAAC;IAED,WAAW;QACT,OAAO,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,qBAAqB,CAAC,CAAC;IAC3D,CAAC;IAED,YAAY;QACV,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAgB,WAAW,GAAG,eAAe,EAChE,IAAI,CAAC,mBAAmB,CAAC;aACxB,IAAI,CAAC,0DAAG,CAAC,QAAQ,CAAC,EAAE;YACnB,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,qBAAqB,CAAC,CAAC;YAC/C,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;YAErC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,qBAAqB,EAC3C,QAAQ,CAAC,mBAAmB,CAAC,CAAC;YAChC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,WAAW,EAAE,QAAQ,CAAC,SAAS,CAAC,CAAC;QAC3D,CAAC,CAAC,CAAC,CAAC;IACR,CAAC;IAED,WAAW;QACT,OAAO,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;IAChD,CAAC;IACD,eAAe;QACb,OAAO,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;IACpD,CAAC;IAED,UAAU;QACR,OAAO,IAAI,CAAC,WAAW,EAAE,IAAI,IAAI,CAAC;IACpC,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,GAAG,aAAa,EAAE,IAAI,CAAC,mBAAmB,EAClE,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC;aACxB,SAAS,CAAC,IAAI,CAAC,EAAE;YAChB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACpB,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,uDAAU,CAAC,KAAK,CAAC,CAAC;QACpB,CAAC,CAAC;QACJ,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,qBAAqB,CAAC,CAAC;QAC/C,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;QACpC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;QACxC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;IACvC,CAAC;;sEArEU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAHV,MAAM;6FAGP,WAAW;cAJvB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;6LAIW,QAAQ;kBAAjB,oDAAM;YACG,QAAQ;kBAAjB,oDAAM;;;;;;;;;;;;;;AClBT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACE;AACG;AACM;AACd;AACoB;AACN;AACL;;;AAE7D,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,QAAQ,EAAE,SAAS,EAAE,MAAM,EAAC;IACpD,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,2EAAgB,EAAC;IAC7C,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,uEAAc,EAAC;IAC3C,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,0EAAe,EAAC;IAC7C,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,gFAAiB,EAAC;IAC7C,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,kEAAa,EAAC;IACzC,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,sFAAmB,EAAC;IACjD,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAC,gFAAiB,EAAE;IAC5C,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,EAAC;CAClC,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACzBD;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  declarations: [\r\n\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule\r\n  ]\r\n})\r\nexport class AuthModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-user',\r\n  templateUrl: './user.component.html',\r\n  styleUrls: ['./user.component.css']\r\n})\r\nexport class UserComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>user works!</p>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {FormControl, FormGroup} from \"@angular/forms\";\r\n\r\nimport {CreatePostService} from \"./createPost.service\";\r\nimport {Router} from \"@angular/router\";\r\nimport {ToastrService} from \"ngx-toastr\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-create-post',\r\n  templateUrl: './create-post.component.html',\r\n  styleUrls: ['./create-post.component.css']\r\n})\r\nexport class CreatePostComponent implements OnInit {\r\n  newPostRequestPayload: { postName: any; id: any; description: any; userName: any; url: any };\r\n  newPostForm: FormGroup;\r\n\r\n  constructor( private http: HttpClient, private toastr: ToastrService, private createPostService: CreatePostService, private router: Router) {\r\n    this.newPostRequestPayload = {\r\n      description: '',\r\n      id: 0,\r\n      url: '',\r\n      postName: '',\r\n      userName: ''\r\n    }\r\n\r\n  }\r\n\r\n  ngOnInit(){\r\n    this.newPostForm = new FormGroup({\r\n      description: new FormControl(''),\r\n      url: new FormControl(''),\r\n      postName: new FormControl(''),\r\n      userName: new FormControl('')\r\n    })\r\n  }\r\n\r\n  newPost() {\r\n    this.newPostRequestPayload = {\r\n      description: this.newPostForm.get('description').value,\r\n       id: 0,\r\n      url: this.newPostForm.get('url').value,\r\n      postName: this.newPostForm.get('postName').value,\r\n      userName: this.newPostForm.get('userName').value\r\n    };\r\n\r\n    this.createPostService.newPost(this.newPostRequestPayload).subscribe(data => {\r\n    }, () => {\r\n      this.toastr.error('Creating post failed! Please try again.')\r\n    });\r\n\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n","\r\n\r\n\r\n<div class=\"container\">\r\n\r\n\r\n  <form [formGroup]=\"newPostForm\" (ngSubmit)=\"newPost()\">\r\n    <div>\r\n      <label for=\"description\">Description:</label> <p></p>\r\n      <input type=\"text\" [formControlName]=\"'description'\" id=\"description\">\r\n      <span *ngIf=\"!newPostForm.get('description').valid && newPostForm.get('description').touched\">Please enter a description</span>\r\n    </div>\r\n\r\n\r\n\r\n    <div>\r\n      <label for=\"post\" class=\"post\">Post:</label><p></p>\r\n      <textarea type=\"text\" cols=\"50\" rows=\"5\" [formControlName]=\"'postName'\" id=\"post\"></textarea>\r\n    </div>\r\n\r\n    <div>\r\n      <label for=\"username\">username:</label>\r\n      <input type=\"text\" [formControlName]=\"'userName'\" id=\"username\" >\r\n    </div>\r\n\r\n    <div>\r\n      <label for=\"url\">url:</label>\r\n      <input type=\"text\" [formControlName]=\"'url'\" id=\"url\">\r\n    </div>\r\n\r\n    <button type=\"submit\">Public</button>\r\n\r\n  </form>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport {NewPostRequestPayload} from \"./newPostRequestPayload\";\r\nconst angularHost= 'http://localhost:8080/';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CreatePostService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  newPost(newPostRequestPayload: NewPostRequestPayload): Observable<any> {\r\n    return this.http.post(angularHost+'api/posts', newPostRequestPayload);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-sign-up-succeed',\r\n  templateUrl: './sign-up-succeed.component.html',\r\n  styleUrls: ['./sign-up-succeed.component.css']\r\n})\r\nexport class SignUpSucceedComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>sign-up-succeed works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-edit-user',\r\n  templateUrl: './edit-user.component.html',\r\n  styleUrls: ['./edit-user.component.css']\r\n})\r\nexport class EditUserComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>edit-user works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-welcome',\r\n  templateUrl: './welcome.component.html',\r\n  styleUrls: ['./welcome.component.css']\r\n})\r\nexport class WelcomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","\r\n<div align=\"center\">\r\n<p>Welcome in Twitter 2.0. app created by SDA Java Course students!</p>\r\n<p>Feel free to sign up or login</p>\r\n</div>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'Twitter 2.0';\r\n}\r\n\r\n\r\n\r\n","<header>\r\n\r\n<app-header>\r\n\r\n</app-header>\r\n</header>\r\n\r\n<body>\r\n<router-outlet></router-outlet>\r\n\r\n</body>\r\n","import {BrowserModule} from '@angular/platform-browser';\r\nimport {NgModule} from '@angular/core';\r\nimport {AppRoutingModule} from './app-routing.module';\r\nimport {AppComponent} from './app.component';\r\nimport {LogInComponent} from \"./log-in/log-in.component\";\r\nimport {SignUpComponent} from \"./sign-up/sign-up.component\";\r\nimport {UserComponent} from \"./user/user.component\";\r\nimport {NotFoundComponent} from \"./not-found/not-found.component\";\r\nimport {EditUserComponent} from \"./edit-user/edit-user.component\";\r\nimport {WelcomeComponent} from './welcome/welcome.component';\r\nimport {SignUpSucceedComponent} from './sign-up-succeed/sign-up-succeed.component';\r\nimport {ReactiveFormsModule} from \"@angular/forms\";\r\nimport {HttpClientModule} from \"@angular/common/http\";\r\nimport {AuthModule} from \"./sign-up/auth.module\";\r\nimport {EditorModule} from \"@tinymce/tinymce-angular\";\r\nimport {CreatePostComponent} from \"./create-post/create-post.component\";\r\nimport {NgxWebstorageModule} from 'ngx-webstorage';\r\nimport {BrowserAnimationsModule} from \"@angular/platform-browser/animations\";\r\nimport {ToastrModule} from \"ngx-toastr\";\r\nimport {HeaderComponent} from \"./header/header.component\";\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HeaderComponent,\r\n    LogInComponent,\r\n    SignUpComponent,\r\n    EditUserComponent,\r\n    UserComponent,\r\n    NotFoundComponent,\r\n    WelcomeComponent,\r\n    SignUpSucceedComponent,\r\n    CreatePostComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    AuthModule,\r\n    EditorModule,\r\n    NgxWebstorageModule.forRoot(),\r\n    BrowserAnimationsModule,\r\n    ToastrModule.forRoot()\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {LogInRequestPayload} from \"./log-in-request.payload\";\r\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\r\nimport {AuthService} from \"../auth/auth.service\";\r\nimport {ActivatedRoute, Router} from \"@angular/router\";\r\nimport {ToastrService} from \"ngx-toastr\";\r\n\r\n@Component({\r\n  selector: 'app-log-in',\r\n  templateUrl: './log-in.component.html',\r\n  styleUrls: ['./log-in.component.css']\r\n})\r\n\r\nexport class LogInComponent implements OnInit {\r\n  loginRequestPayload: LogInRequestPayload;\r\n  loginForm: FormGroup;\r\n  isError: boolean;\r\n  registerSuccessMessage: string;\r\n\r\n  constructor(private authService: AuthService, private activatedRoute: ActivatedRoute, private router: Router, private toastr: ToastrService) {\r\n    this.loginRequestPayload = {\r\n      username: '',\r\n      password: ''\r\n    };\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loginForm = new FormGroup({\r\n      username: new FormControl('', Validators.required),\r\n      password: new FormControl('', Validators.required)\r\n    });\r\n\r\n    this.activatedRoute.queryParams\r\n      .subscribe(params => {\r\n        if (params.registered !== undefined && params.registered === 'true') {\r\n          this.toastr.success('Signup successful!');\r\n          this.registerSuccessMessage = 'Please check your inbox for activation link ' +\r\n            'activate your account before you Login!';\r\n        }\r\n      });\r\n  }\r\n\r\n  login() {\r\n    this.loginRequestPayload = {\r\n      username: this.loginForm.get('username').value,\r\n      password: this.loginForm.get('password').value,\r\n    };\r\n\r\n    this.authService.login(this.loginRequestPayload).subscribe(data => {\r\n      if (data) {\r\n        this.isError = false;\r\n        this.router.navigateByUrl(\"/\")\r\n        this.toastr.success('Login Successful')\r\n      } else {\r\n        this.isError = true;\r\n      }\r\n    });\r\n  }\r\n\r\n  usernameValidation(username) {\r\n    return (!this.loginForm.get(username).valid && this.loginForm.get(username).touched);\r\n  }\r\n\r\n  passwordValidation(password) {\r\n    return (!this.loginForm.get(password).valid && this.loginForm.get(password).touched);\r\n  }\r\n}\r\n\r\n","<div class=\"container\">\r\n  <h3>Login</h3>\r\n\r\n  <form [formGroup]=\"loginForm\" (ngSubmit)=\"login()\">\r\n    <div>\r\n      <label for=\"username\">Username:</label>\r\n      <input type=\"text\" id=\"username\" name=\"username\" [formControlName]=\"'username'\">\r\n      <span *ngIf=\"usernameValidation('username')\"> Please provide a valid username </span>\r\n    </div>\r\n\r\n    <div>\r\n      <label for=\"password\">Password:</label>\r\n      <input type=\"password\" id=\"password\" name=\"password\" [formControlName]=\"'password'\">\r\n      <span *ngIf=\"passwordValidation('password')\"> Please enter a valid password </span>\r\n    </div>\r\n\r\n    <button type=\"submit\" class=\"login\"> Login</button>\r\n    <div class=\"login-failed\" *ngIf=\"this.isError\"> Login failed. Please check your credentials and try again</div>\r\n    <div class=\"login-failed\" *ngIf=\"this.registerSuccessMessage.length > 0\">\r\n      <p>{{registerSuccessMessage}}</p>\r\n    </div>\r\n\r\n  </form>\r\n</div>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\r\nimport {SignupRequestPayload} from \"./signup-request.payload\";\r\nimport {AuthService} from \"../auth/auth.service\";\r\nimport {Router} from \"@angular/router\";\r\nimport {ToastrService} from \"ngx-toastr\";\r\n\r\n@Component({\r\n  selector: 'app-sign-up',\r\n  templateUrl: './sign-up.component.html',\r\n  styleUrls: ['./sign-up.component.css']\r\n})\r\nexport class SignUpComponent implements OnInit {\r\n  signupRequestPayload: SignupRequestPayload;\r\n  signupForm: FormGroup;\r\n\r\n  constructor(private authService: AuthService, private router: Router, private toastr: ToastrService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.signupForm = new FormGroup({\r\n      email: new FormControl('', [Validators.required, Validators.email]),\r\n      username: new FormControl('', Validators.required),\r\n      password: new FormControl('', Validators.required),\r\n      passwordR: new FormControl('', Validators.required)\r\n    });\r\n  }\r\n\r\n  signup() {\r\n    this.signupRequestPayload = {\r\n      username: this.signupForm.get('username').value,\r\n      email: this.signupForm.get('email').value,\r\n      password: this.signupForm.get('password').value,\r\n      confirmedPassword: this.signupForm.get('passwordR').value\r\n    };\r\n\r\n    this.authService.signup(this.signupRequestPayload).\r\n    subscribe(() => {\r\n      this.router.navigate(['/login'], {queryParams: {registered: 'true'}});\r\n    }, () => {\r\n      this.toastr.error('Registration Failed! Please try again.')\r\n    });\r\n  }\r\n\r\n  emailValidation(email) {\r\n    return (!this.signupForm.get(email).valid && this.signupForm.get(email).touched);\r\n  }\r\n\r\n  passwordValidation(password) {\r\n    return (!this.signupForm.get(password).valid && this.signupForm.get(password).touched);\r\n  }\r\n\r\n  usernameValidation(username) {\r\n    return (!this.signupForm.get(username).valid && this.signupForm.get(username).touched);\r\n  }\r\n\r\n  passwordRValidation(passwordR) {\r\n    return (!this.signupForm.get(passwordR).valid && this.signupForm.get(passwordR).touched);\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <h3>Join us!</h3>\r\n\r\n  <form [formGroup]=\"signupForm\" (ngSubmit)=\"signup()\">\r\n    <div>\r\n      <label for=\"email\">Email:</label>\r\n      <input type=\"email\" [formControlName]=\"'email'\" id=\"email\">\r\n      <span *ngIf=\"emailValidation('email')\"> Please enter a valid email </span>\r\n    </div>\r\n    <div>\r\n      <label for=\"username\">Login:</label>\r\n      <input type=\"text\" [formControlName]=\"'username'\" id=\"username\">\r\n      <span *ngIf=\"usernameValidation('username')\"> Please provide a valid username </span>\r\n    </div>\r\n\r\n\r\n    <div>\r\n      <label for=\"password\">Password:</label>\r\n      <input type=\"password\" [formControlName]=\"'password'\" id=\"password\">\r\n      <span *ngIf=\"passwordValidation('password')\"> Please enter a valid password </span>\r\n    </div>\r\n\r\n    <div>\r\n      <label for=\"passwordR\">Repeat password:</label>\r\n      <input type=\"password\" [formControlName]=\"'passwordR'\" id=\"passwordR\">\r\n      <span *ngIf=\"passwordRValidation('passwordR')\"> Please enter a valid repeated password </span>\r\n\r\n    </div>\r\n\r\n\r\n    <button type=\"submit\" class=\"sign-up\">Sign Up</button>\r\n  </form>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {AuthService} from \"../auth/auth.service\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  constructor( public authService: AuthService) { }\r\n\r\n  ngOnInit(): void{\r\n\r\n  }\r\n\r\n}\r\n\r\n","<header>\r\n  <div *ngIf=\"authService.isLoggedIn()\">\r\n    <a routerLink=\"/\">\r\n      <img\r\n        src=\"https://st3.depositphotos.com/5142301/12930/v/950/depositphotos_129309942-stock-illustration-t-letter-logo-in-square.jpg\"\r\n        class=\"t-icon\">\r\n      <div class=\"logo-text\">\r\n        Twitter 2.0\r\n      </div>\r\n    </a>\r\n\r\n  <div>\r\n    <a routerLink=\"/signup\" class=\"float-right signup mr-2\">Sign up</a>\r\n  </div>\r\n  <div>\r\n    <a routerLink=\"/login\" class=\"float-right login mr-2\">Login</a>\r\n  </div>\r\n  </div>\r\n\r\n  <div *ngIf=\"!authService.isLoggedIn()\">\r\n    <a routerLink=\"/\">\r\n      <img\r\n        src=\"https://st3.depositphotos.com/5142301/12930/v/950/depositphotos_129309942-stock-illustration-t-letter-logo-in-square.jpg\"\r\n        class=\"t-icon\">\r\n      <div class=\"logo-text\">\r\n        Twitter 2.0\r\n      </div>\r\n    </a>\r\n\r\n  <div>\r\n    <a routerLink=\"/user\" class=\"float-right signup mr-2\">User profile</a>\r\n  </div>\r\n  <div>\r\n    <a routerLink=\"/start\" class=\"float-right login mr-2\">Log out</a>\r\n  </div>\r\n  </div>\r\n\r\n</header>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-not-found',\r\n  templateUrl: './not-found.component.html',\r\n  styleUrls: ['./not-found.component.css']\r\n})\r\nexport class NotFoundComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n"," <img src=\"https://lh3.googleusercontent.com/proxy/48t8wxEDoKB9GCNoN7DCiW4KaemB_bDNn3u3LwXM0a3EJjexdOEOyqDePH3S8Z-fNtCJa5A\" class=\"img\">\r\n","import {EventEmitter, Injectable, Output} from '@angular/core';\r\nimport {SignupRequestPayload} from '../sign-up/signup-request.payload';\r\nimport {Observable, throwError} from 'rxjs';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {LogInRequestPayload} from \"../log-in/log-in-request.payload\";\r\nimport {LoginResponse} from \"../log-in/log-in-response.payload\";\r\nimport {map, tap} from \"rxjs/operators\";\r\nimport {LocalStorageService} from \"ngx-webstorage\";\r\n\r\nconst angularHost = 'http://localhost:8080/auth';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class AuthService {\r\n\r\n  @Output() loggedIn: EventEmitter<boolean> = new EventEmitter();\r\n  @Output() username: EventEmitter<string> = new EventEmitter();\r\n\r\n  refreshTokenPayload = {\r\n    refreshToken: this.getRefreshToken(),\r\n    username: this.getUserName()\r\n  }\r\n\r\n  constructor(private http: HttpClient, private localStorage: LocalStorageService) {\r\n  }\r\n\r\n  signup(signupRequestPayload: SignupRequestPayload): Observable<any> {\r\n    return this.http.post(angularHost + '/signup', signupRequestPayload);\r\n  }\r\n\r\n\r\n  login(loginRequestPayload: LogInRequestPayload):Observable<boolean> {\r\n    return this.http.post<LoginResponse>(angularHost + '/login', loginRequestPayload).pipe(map(data => {\r\n      this.localStorage.store('authenticationToken', data.authenticationToken)\r\n      this.localStorage.store('username', data.username)\r\n      this.localStorage.store('refreshtoken', data.refreshToken)\r\n      this.localStorage.store('expiresAt', data.expiresAt);\r\n\r\n      return true;\r\n    }));\r\n  }\r\n\r\n  getJwtToken(){\r\n    return this.localStorage.retrieve('authenticationToken');\r\n  }\r\n\r\n  refreshToken() {\r\n    return this.http.post<LoginResponse>(angularHost + 'refresh/token',\r\n      this.refreshTokenPayload)\r\n      .pipe(tap(response => {\r\n        this.localStorage.clear('authenticationToken');\r\n        this.localStorage.clear('expiresAt');\r\n\r\n        this.localStorage.store('authenticationToken',\r\n          response.authenticationToken);\r\n        this.localStorage.store('expiresAt', response.expiresAt);\r\n      }));\r\n  }\r\n\r\n  getUserName() {\r\n    return this.localStorage.retrieve('username');\r\n  }\r\n  getRefreshToken() {\r\n    return this.localStorage.retrieve('refreshToken');\r\n  }\r\n\r\n  isLoggedIn(): boolean {\r\n    return this.getJwtToken() != null;\r\n  }\r\n\r\n  logout() {\r\n    this.http.post(angularHost + 'auth/logout', this.refreshTokenPayload,\r\n      { responseType: 'text' })\r\n      .subscribe(data => {\r\n        console.log(data);\r\n      }, error => {\r\n        throwError(error);\r\n      })\r\n    this.localStorage.clear('authenticationToken');\r\n    this.localStorage.clear('username');\r\n    this.localStorage.clear('refreshToken');\r\n    this.localStorage.clear('expiresAt');\r\n  }\r\n\r\n}\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport {LogInComponent} from \"./log-in/log-in.component\";\r\nimport {SignUpComponent} from \"./sign-up/sign-up.component\";\r\nimport {EditUserComponent} from \"./edit-user/edit-user.component\";\r\nimport {UserComponent} from \"./user/user.component\";\r\nimport {CreatePostComponent} from \"./create-post/create-post.component\";\r\nimport {NotFoundComponent} from \"./not-found/not-found.component\";\r\nimport {WelcomeComponent} from \"./welcome/welcome.component\";\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: '/start', pathMatch: 'full'},\r\n  { path: 'start', component: WelcomeComponent},\r\n  { path: 'login', component: LogInComponent},\r\n  { path: 'signup', component: SignUpComponent},\r\n  { path: 'edit', component: EditUserComponent},\r\n  { path: 'user', component: UserComponent},\r\n  { path: 'create', component: CreatePostComponent},\r\n  { path: '404', component:NotFoundComponent },\r\n  { path: '**', redirectTo: '/404'},\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}